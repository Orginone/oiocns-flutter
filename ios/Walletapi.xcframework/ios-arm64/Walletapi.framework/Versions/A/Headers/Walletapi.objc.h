// Objective-C API for talking to gitlab.33.cn/wallet/walletapi Go package.
//   gobind -lang=objc gitlab.33.cn/wallet/walletapi
//
// File is generated by gobind. Do not edit.

#ifndef __Walletapi_H__
#define __Walletapi_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class WalletapiAccount;
@class WalletapiAddress;
@class WalletapiAddrinfo;
@class WalletapiBackRedPacket;
@class WalletapiBurnParam;
@class WalletapiChain;
@class WalletapiChainClient;
@class WalletapiCoinTokenInfo;
@class WalletapiCommonParam;
@class WalletapiConfig;
@class WalletapiContact;
@class WalletapiContractTransferReq;
@class WalletapiEncryptContactResult;
@class WalletapiEncryptOpt;
@class WalletapiEparam;
@class WalletapiEvmContractTransferReq;
@class WalletapiEvmLockToExchangeReq;
@class WalletapiExchangeWithdrawToEvmReq;
@class WalletapiExchangeWithdrawToXgo;
@class WalletapiExecers;
@class WalletapiExtend;
@class WalletapiExtendInfo;
@class WalletapiGWithoutTx;
@class WalletapiGetEvmBalanceReq;
@class WalletapiGsendTx;
@class WalletapiGsendTxResp;
@class WalletapiHDWallet;
@class WalletapiLmExchangeParacrossReq;
@class WalletapiLockParam;
@class WalletapiMutiTx;
@class WalletapiNoneDelayTxParam;
@class WalletapiPageInfo;
@class WalletapiParaCrossCrossTransferReq;
@class WalletapiParaCrossReq;
@class WalletapiParaParacrossTransferTxParam;
@class WalletapiParaParacrossWithdrawTxParam;
@class WalletapiQueryBalanceReq;
@class WalletapiQueryByPage;
@class WalletapiQueryCrossStatusParam;
@class WalletapiQueryFeeParam;
@class WalletapiQueryParacrossTxReq;
@class WalletapiQueryRecoverParam;
@class WalletapiQueryStatParam;
@class WalletapiQueryTxByPage;
@class WalletapiQueryTxHistoryReq;
@class WalletapiQueryTxStatusReq;
@class WalletapiQueryWithdrawByProxyParam;
@class WalletapiReceiveRedPacket;
@class WalletapiRecoverMemo;
@class WalletapiRedpacketSign;
@class WalletapiSendParacrossTxsReq;
@class WalletapiSendRedPacket;
@class WalletapiSignData;
@class WalletapiSubmitRecoverParam;
@class WalletapiTransferToExchangeParam;
@class WalletapiTransportRawData;
@class WalletapiTransportReq;
@class WalletapiTxDetail;
@class WalletapiTxInfo;
@class WalletapiTxdata;
@class WalletapiUtil;
@class WalletapiWalletBalance;
@class WalletapiWalletBtyToken;
@class WalletapiWalletCheckAddr;
@class WalletapiWalletEosAccountDetail;
@class WalletapiWalletImporAddr;
@class WalletapiWalletMulAddr;
@class WalletapiWalletQueryByAddr;
@class WalletapiWalletQueryByTxid;
@class WalletapiWalletRecover;
@class WalletapiWalletRecoverParam;
@class WalletapiWalletSendTx;
@class WalletapiWalletSession;
@class WalletapiWalletTokens;
@class WalletapiWalletTrade;
@class WalletapiWalletTx;
@class WalletapiWalletTxPending;
@class WalletapiWithdrawFee;
@class WalletapiWithdrawFromExchangeParam;
@class WalletapiWithdrawParam;
@class WalletapiXgo;
@class WalletapiXgoBurnMapParam;
@class WalletapiXgoBurnParam;
@class WalletapiXgoTransferToExecParam;
@class WalletapiYccParacrossTransferTxParam;
@class WalletapiYccParacrossWithdrawTxParam;
@class WalletapiZKSync;
@class WalletapiZKsyncAccountInfo;
@class WalletapiZksyncContractToTree;
@class WalletapiZksyncDepositParam;
@class WalletapiZksyncL2AddrInfo;
@class WalletapiZksyncQueryL2AccountParam;
@class WalletapiZksyncQueryL2TokeBalanceParam;
@class WalletapiZksyncQueryL2TokenParam;
@class WalletapiZksyncQueryTokenIDParam;
@class WalletapiZksyncSetPubKeyParam;
@class WalletapiZksyncTokenBalancce;
@class WalletapiZksyncTokenInfo;
@class WalletapiZksyncTransfer;
@class WalletapiZksyncTreeToContract;
@class WalletapiZksyncWithdraw;

@interface WalletapiAccount : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull account;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@end

@interface WalletapiAddress : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * 导出base58编码的chain33地址
 */
- (NSString* _Nonnull)base58String:(NSError* _Nullable* _Nullable)error;
- (BOOL)importAddrFromString:(NSString* _Nullable)account error:(NSError* _Nullable* _Nullable)error;
/**
 * 把bytes导入
 */
- (BOOL)setBytes:(NSData* _Nullable)b error:(NSError* _Nullable* _Nullable)error;
@end

@interface WalletapiAddrinfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull addr;
@property (nonatomic) NSString* _Nonnull appid;
@property (nonatomic) NSString* _Nonnull appSymbol;
@end

/**
 * BackRedPacket
 */
@interface WalletapiBackRedPacket : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull packetId;
@end

@interface WalletapiBurnParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull tokenAddr;
@property (nonatomic) NSString* _Nonnull ethReceiverAddr;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull bridgeBankContractAddr;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) int64_t decimal;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@property (nonatomic) WalletapiWithdrawFee* _Nullable withdrawFee;
@end

@interface WalletapiChain : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull feePrikey;
@property (nonatomic) NSString* _Nonnull feeAddr;
@property (nonatomic) NSString* _Nonnull title;
@property (nonatomic) NSString* _Nonnull baseExec;
@property (nonatomic) int32_t feeAddressID;
@property (nonatomic) int32_t execAddressID;
@end

@interface WalletapiChainClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(WalletapiConfig* _Nullable)c;
// skipped field ChainClient.FeePri with unsupported type: github.com/33cn/chain33/common/crypto.PrivKey

/**
 * BackReadPacketTx
 */
- (NSString* _Nonnull)backReadPacketTx:(WalletapiBackRedPacket* _Nullable)v error:(NSError* _Nullable* _Nullable)error;
/**
 * ConvertExectoAddr
 */
- (NSString* _Nonnull)convertExectoAddr:(NSString* _Nullable)execName;
/**
 * CreatTxGroup  createSignTxGroup
 */
- (NSString* _Nonnull)creatTxGroup:(NSString* _Nullable)tx1 tx2:(NSString* _Nullable)tx2 fee:(int64_t)fee error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)decodeTx:(NSString* _Nullable)tx error:(NSError* _Nullable* _Nullable)error;
/**
 * ReceiveReadPacketTx
 */
- (NSString* _Nonnull)receiveReadPacketTx:(WalletapiReceiveRedPacket* _Nullable)v error:(NSError* _Nullable* _Nullable)error;
/**
 * CreateSendRedPacketTx
 */
- (NSString* _Nonnull)sendRedPacketTx:(WalletapiSendRedPacket* _Nullable)v error:(NSError* _Nullable* _Nullable)error;
- (void)setCfg:(NSString* _Nullable)title noneExec:(NSString* _Nullable)noneExec feeKey:(NSString* _Nullable)feeKey feeAddressID:(int32_t)feeAddressID execAddressID:(int32_t)execAddressID;
- (NSString* _Nonnull)signNoBalanceTransaction:(NSString* _Nullable)txHex privKey:(NSString* _Nullable)privKey privKeyAddressID:(int32_t)privKeyAddressID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signTransaction:(NSString* _Nullable)txHex privKey:(NSString* _Nullable)privKey privKeyAddressID:(int32_t)privKeyAddressID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signTransactionGroup:(int32_t)index txHex:(NSString* _Nullable)txHex privKey:(NSString* _Nullable)privKey privKeyAddressID:(int32_t)privKeyAddressID error:(NSError* _Nullable* _Nullable)error;
/**
 * SignTxGroup createSignTxGroup
 */
- (NSString* _Nonnull)signTxGroup:(NSString* _Nullable)prikey privkeyAddressID:(int32_t)privkeyAddressID txs:(NSString* _Nullable)txs error:(NSError* _Nullable* _Nullable)error;
// skipped method ChainClient.TranactionToHexString with unsupported parameter or return types

/**
 * TransferToExec transfer token to contractor
 */
- (NSString* _Nonnull)transferToExec:(int64_t)amount fee:(int64_t)fee execName:(NSString* _Nullable)execName toExecName:(NSString* _Nullable)toExecName tokenName:(NSString* _Nullable)tokenName;
/**
 * WithdrawFromExec withdraw token
 */
- (NSString* _Nonnull)withdrawFromExec:(int64_t)amount fee:(int64_t)fee execName:(NSString* _Nullable)execName toExecName:(NSString* _Nullable)toExecName tokenName:(NSString* _Nullable)tokenName;
@end

@interface WalletapiCoinTokenInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) NSString* _Nonnull coinTokenContractAddr;
@property (nonatomic) int64_t decimal;
@property (nonatomic) NSString* _Nonnull xgoBridgeBankContractAddr;
@property (nonatomic) NSString* _Nonnull xgoOracleAddr;
@end

@interface WalletapiCommonParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) int32_t chainID;
@end

/**
 * Config
 */
@interface WalletapiConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Config.Chain with unsupported type: gitlab.33.cn/wallet/walletapi.Chain

// skipped field Config.Encrypt with unsupported type: gitlab.33.cn/wallet/walletapi.EncryptOpt

@end

@interface WalletapiContact : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull email;
@property (nonatomic) NSString* _Nonnull phone;
@end

@interface WalletapiContractTransferReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull fromExecer;
@property (nonatomic) NSString* _Nonnull toExecer;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@property (nonatomic) int32_t execerAddressID;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@end

@interface WalletapiEncryptContactResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull originData;
@property (nonatomic) NSString* _Nonnull encryptedData;
@end

@interface WalletapiEncryptOpt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int32_t signType;
@end

@interface WalletapiEparam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull data;
@property (nonatomic) int64_t gas;
@property (nonatomic) int64_t gasPrice;
@property (nonatomic) int64_t nonce;
@property (nonatomic) int64_t value;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) double fee;
@property (nonatomic) NSString* _Nonnull note;
@end

@interface WalletapiEvmContractTransferReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) NSString* _Nonnull paraName;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@end

@interface WalletapiEvmLockToExchangeReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) WalletapiCoinTokenInfo* _Nullable coinTokenInfo;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) double fee;
@property (nonatomic) int32_t chainID;
@property (nonatomic) WalletapiExecers* _Nullable execers;
@end

@interface WalletapiExchangeWithdrawToEvmReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) WalletapiCoinTokenInfo* _Nullable coinTokenInfo;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) double fee;
@property (nonatomic) int32_t chainID;
@property (nonatomic) WalletapiExecers* _Nullable execers;
@end

@interface WalletapiExchangeWithdrawToXgo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull addr;
@property (nonatomic) WalletapiCoinTokenInfo* _Nullable coinTokenInfo;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) double fee;
@property (nonatomic) int32_t chainID;
@property (nonatomic) WalletapiExecers* _Nullable execers;
@property (nonatomic) NSString* _Nonnull recipient;
@end

@interface WalletapiExecers : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull evmExecer;
@property (nonatomic) NSString* _Nonnull xgoExecer;
@property (nonatomic) NSString* _Nonnull exchangeExecer;
@property (nonatomic) NSString* _Nonnull noneExecer;
@end

/**
 * ETH 跨链配置项
 */
@interface WalletapiExtend : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull method;
@property (nonatomic) NSString* _Nonnull tokenAddr;
@property (nonatomic) NSString* _Nonnull chain33Reciver;
@property (nonatomic) int64_t decimal;
@end

@interface WalletapiExtendInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) NSString* _Nonnull assetExec;
@property (nonatomic) NSString* _Nonnull assetSymbol;
@end

/**
 * txgroup,set fee from the special address
 */
@interface WalletapiGWithoutTx : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull feepriv;
@property (nonatomic) NSString* _Nonnull txpriv;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull rawTx;
@property (nonatomic) double fee;
@property (nonatomic) int32_t txAddressID;
@property (nonatomic) int32_t feeAddressID;
@property (nonatomic) int32_t execerAddressID;
@end

@interface WalletapiGetEvmBalanceReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull addr;
@property (nonatomic) WalletapiCoinTokenInfo* _Nullable coinTokenInfo;
@end

/**
 * cost fee from the set address
 */
@interface WalletapiGsendTx : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull feepriv;
@property (nonatomic) NSString* _Nonnull txpriv;
@property (nonatomic) int32_t txAddressID;
@property (nonatomic) int32_t feeAddressID;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) double fee;
@property (nonatomic) NSString* _Nonnull execer;
/**
 * new param
 */
@property (nonatomic) double tokenFee;
@property (nonatomic) NSString* _Nonnull tokenFeeAddr;
/**
 * addr CoinsForFee
if CoinsForFee=true, parachain's base coins for fee else parachain's token for fee
 */
@property (nonatomic) BOOL coinsForFee;
@property (nonatomic) NSString* _Nonnull tokenFeeSymbol;
@end

/**
 * txgrop if contains 2num tx,txid means the second tx hash.
if no txgroup,txid just the tx hash
 */
@interface WalletapiGsendTxResp : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull signedTx;
@property (nonatomic) NSString* _Nonnull txId;
@end

/**
 * HDWallet  支持BIP-44标准的HD钱包
 */
@interface WalletapiHDWallet : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field HDWallet.CoinType with unsupported type: uint32

@property (nonatomic) NSData* _Nullable rootSeed;
// skipped field HDWallet.MasterKey with unsupported type: *gitlab.33.cn/wallet/walletapi/bipwallet/bip32.Key

// skipped method HDWallet.NewAddress with unsupported parameter or return types

- (NSString* _Nonnull)newAddress_v2:(long)index error:(NSError* _Nullable* _Nullable)error;
// skipped method HDWallet.NewKeyPair with unsupported parameter or return types

- (NSData* _Nullable)newKeyPriv:(long)index error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)newKeyPub:(long)index error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * 联盟链交易所BTY paracross交易请求
 */
@interface WalletapiLmExchangeParacrossReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull amount;
@property (nonatomic) NSString* _Nonnull signedRawTxs;
@property (nonatomic) int64_t crossType;
@property (nonatomic) NSString* _Nonnull recipient;
@end

@interface WalletapiLockParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull ethReceiverAddr;
@property (nonatomic) NSString* _Nonnull assetContractAddr;
@property (nonatomic) NSString* _Nonnull bridgeBankContractAddr;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) int32_t chainID;
@property (nonatomic) int64_t decimal;
@property (nonatomic) double fee;
@end

@interface WalletapiMutiTx : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) double fee;
@end

/**
 * 构造延时存证none交易
 */
@interface WalletapiNoneDelayTxParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) int32_t addressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@end

/**
 * Direction 0 desc 1  asc
 */
@interface WalletapiPageInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) int64_t index;
@property (nonatomic) int64_t count;
@property (nonatomic) int64_t direction;
@property (nonatomic) int64_t type;
@end

/**
 * 主链和平行链paracross跨链参数可以指定资产执行器AssetExec和资产标识AssetSymbol
 */
@interface WalletapiParaCrossCrossTransferReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull addr;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull fromExecer;
@property (nonatomic) NSString* _Nonnull toExecer;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@property (nonatomic) NSString* _Nonnull assetExec;
@property (nonatomic) NSString* _Nonnull assetSymbol;
@property (nonatomic) int32_t execerAddressID;
@end

@interface WalletapiParaCrossReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull addr;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull fromExecer;
@property (nonatomic) NSString* _Nonnull toExecer;
@property (nonatomic) int32_t chainID;
@property (nonatomic) double fee;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) int32_t execerAddressID;
@end

/**
 * 从FromAddr转账到ToAddr 并转入ToAddr 的paracross合约请求参数
 */
@interface WalletapiParaParacrossTransferTxParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) int32_t mainExecAddressID;
@property (nonatomic) int32_t paraExecAddressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull paraTitle;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) NSString* _Nonnull note;
@end

/**
 * 从FromAddr的paracross withdraw到coins 并转账给ToAddr
 */
@interface WalletapiParaParacrossWithdrawTxParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) int32_t mainExecAddressID;
@property (nonatomic) int32_t paraExecAddressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull paraTitle;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) NSString* _Nonnull note;
@end

@interface WalletapiQueryBalanceReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull execer;
@property (nonatomic) NSString* _Nonnull assetExec;
@property (nonatomic) NSString* _Nonnull assetSymbol;
@end

/**
 * Direction 0 desc 1  asc
 */
@interface WalletapiQueryByPage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) int64_t index;
@property (nonatomic) int64_t count;
@property (nonatomic) int64_t direction;
@property (nonatomic) int64_t type;
@end

@interface WalletapiQueryCrossStatusParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull chain;
@property (nonatomic) NSString* _Nonnull jobId;
@property (nonatomic) NSString* _Nonnull address;
@end

@interface WalletapiQueryFeeParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymobl;
@end

/**
 * 查询跨链交易请求状态
 */
@interface WalletapiQueryParacrossTxReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull address;
@end

/**
 * 根据找回地址查询钱包找回参数
 */
@interface WalletapiQueryRecoverParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) NSString* _Nonnull address;
@end

@interface WalletapiQueryStatParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int32_t status;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) int64_t index;
@property (nonatomic) int32_t count;
@property (nonatomic) int32_t direction;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

/**
 * 分页查询
 */
@interface WalletapiQueryTxByPage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull chain;
@property (nonatomic) NSString* _Nonnull tokensymobl;
@property (nonatomic) WalletapiPageInfo* _Nullable pageInfo;
@end

@interface WalletapiQueryTxHistoryReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull coinType;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) int64_t direction;
@property (nonatomic) int64_t count;
@property (nonatomic) int64_t index;
@end

@interface WalletapiQueryTxStatusReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull hash;
@end

@interface WalletapiQueryWithdrawByProxyParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull chain;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) NSString* _Nonnull address;
@end

/**
 * ReceiveRedPacket
 */
@interface WalletapiReceiveRedPacket : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull packetId;
@property (nonatomic) WalletapiRedpacketSign* _Nullable redpacketSign;
@end

@interface WalletapiRecoverMemo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull contactSigHash;
@property (nonatomic) NSString* _Nonnull encryptedContact;
@end

/**
 * RedpacketSign
 */
@interface WalletapiRedpacketSign : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int32_t ty;
@property (nonatomic) NSString* _Nonnull signature;
@end

/**
 * 缓存发送跨链交易请求
 */
@interface WalletapiSendParacrossTxsReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull signedRawTxs;
@property (nonatomic) NSString* _Nonnull paraName;
@property (nonatomic) long crossType;
@end

/**
 * SendRedPacket
 */
@interface WalletapiSendRedPacket : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull assetExec;
@property (nonatomic) NSString* _Nonnull assetSymbol;
@property (nonatomic) int64_t amount;
@property (nonatomic) int32_t size;
@property (nonatomic) int32_t type;
@property (nonatomic) NSString* _Nonnull remark;
// skipped field SendRedPacket.ToAddr with unsupported type: []string

@property (nonatomic) NSString* _Nonnull signPubkey;
@property (nonatomic) NSString* _Nonnull signPrikey;
@property (nonatomic) int64_t expiresTime;
@property (nonatomic) int32_t decimalPlaces;
- (void)setToAddr:(NSString* _Nullable)addrs;
@end

/**
 * 待签名数据
 */
@interface WalletapiSignData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSData* _Nullable data;
@property (nonatomic) NSString* _Nonnull privKey;
@property (nonatomic) int32_t addressID;
@end

/**
 * 给后台提交已签过名的payload包含找回参数的none交易
 */
@interface WalletapiSubmitRecoverParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull signedTx;
@property (nonatomic) WalletapiContact* _Nullable contact;
@property (nonatomic) NSString* _Nonnull contactSig;
@property (nonatomic) NSString* _Nonnull encodeRecoverInfo;
@end

/**
 * 跨链转入交易所
 */
@interface WalletapiTransferToExchangeParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymobl;
@property (nonatomic) NSString* _Nonnull chain;
@property (nonatomic) NSString* _Nonnull value;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull chain33RecvAddr;
@property (nonatomic) NSString* _Nonnull signedTxs;
@end

@interface WalletapiTransportRawData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull method;
// skipped field TransportRawData.Payload with unsupported type: encoding/json.RawMessage

@end

@interface WalletapiTransportReq : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull coinType;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
// skipped field TransportReq.RawData with unsupported type: encoding/json.RawMessage

@end

@interface WalletapiTxDetail : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull txid;
@property (nonatomic) double fee;
@end

@interface WalletapiTxInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull exec;
@property (nonatomic) NSData* _Nullable payload;
@property (nonatomic) int64_t feeRate;
@property (nonatomic) NSString* _Nonnull prikey;
@end

/**
 * wallet.go
 */
@interface WalletapiTxdata : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) int64_t gas;
@property (nonatomic) double gasPrice;
@property (nonatomic) WalletapiExtend* _Nullable extend;
@end

@interface WalletapiUtil : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull node;
@property (nonatomic) NSString* _Nonnull appSymbol;
@property (nonatomic) NSString* _Nonnull privateKey;
@end

@interface WalletapiWalletBalance : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@property (nonatomic) WalletapiExtendInfo* _Nullable extendInfo;
@end

@interface WalletapiWalletBtyToken : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletCheckAddr : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletEosAccountDetail : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cpuAvailable;
@property (nonatomic) NSString* _Nonnull cpuUsed;
@property (nonatomic) NSString* _Nonnull netAvailable;
@property (nonatomic) NSString* _Nonnull netUsage;
@property (nonatomic) NSString* _Nonnull ramAvailable;
@property (nonatomic) NSString* _Nonnull ramUsage;
@property (nonatomic) NSString* _Nonnull delegated;
@end

@interface WalletapiWalletImporAddr : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiAddrinfo* _Nullable addrinfo;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletMulAddr : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field WalletMulAddr.Accounts with unsupported type: []gitlab.33.cn/wallet/walletapi.Account

@property (nonatomic) NSString* _Nonnull appid;
@property (nonatomic) NSString* _Nonnull appSymbol;
@property (nonatomic) NSString* _Nonnull mulAddr;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletQueryByAddr : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) WalletapiQueryByPage* _Nullable queryByPage;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletQueryByTxid : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull txid;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletRecover : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) WalletapiWalletRecoverParam* _Nullable param;
/**
 * CalculateHash 计算msg的sha256哈希
 */
- (NSString* _Nonnull)calculateHash:(NSData* _Nullable)msg;
/**
 * CreateNoneDelayTx 构造none延时存证交易
 */
- (NSData* _Nullable)createNoneDelayTx:(WalletapiNoneDelayTxParam* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * ECCDecrypt 私钥解密 使用私钥对十六进制编码的加密数据hexEncryptData进行解密
 */
- (NSData* _Nullable)eccDecrypt:(NSString* _Nullable)hexPrivkey hexEncryptData:(NSString* _Nullable)hexEncryptData error:(NSError* _Nullable* _Nullable)error;
/**
 * ECCEncrypt 公钥加密 使用公钥对字符串data进行加密,并对加密结果进行十六进制编码
 */
- (NSString* _Nonnull)eccEncrypt:(NSString* _Nullable)hexPubkey data:(NSString* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
/**
 * 对找回信息进行序列化并进行十六进制编码用来作为上链交易的备注
 */
- (NSString* _Nonnull)encodeRecoverParam:(WalletapiWalletRecoverParam* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * EncryptContact 使用第三方的公钥对联系方式contact和联系方式的签名contactSignature进行加密,返回原始未加密的数据和加密结果
 */
- (WalletapiEncryptContactResult* _Nullable)encryptContact:(NSString* _Nullable)thirdPartyPubKey contact:(WalletapiContact* _Nullable)contact contactSignature:(NSString* _Nullable)contactSignature error:(NSError* _Nullable* _Nullable)error;
/**
 * GetWalletRecoverAddr 生成找回地址
 */
- (NSString* _Nonnull)getWalletRecoverAddr:(NSError* _Nullable* _Nullable)error;
/**
 * SignContact 使用私钥对联系方式进行签名
 */
- (NSString* _Nonnull)signContact:(NSString* _Nullable)hexPrivkey contact:(WalletapiContact* _Nullable)contact error:(NSError* _Nullable* _Nullable)error;
/**
 * SignRecoverTxWithCtrKey 使用控制地址私钥对从找回地址转账的交易进行签名
 */
- (NSString* _Nonnull)signRecoverTxWithCtrKey:(NSData* _Nullable)rawTx ctrPrivKey:(NSString* _Nullable)ctrPrivKey error:(NSError* _Nullable* _Nullable)error;
/**
 * SignRecoverTxWithRecoverKey 使用恢复地址的私钥对从找回地址转账的交易进行签名
 */
- (NSString* _Nonnull)signRecoverTxWithRecoverKey:(NSData* _Nullable)rawTx recoverPrivKey:(NSString* _Nullable)recoverPrivKey noneDelayTx:(NSData* _Nullable)noneDelayTx error:(NSError* _Nullable* _Nullable)error;
/**
 * 通过找回地址到后台查询钱包找回参数
 */
- (WalletapiWalletRecoverParam* _Nullable)transportQueryRecoverInfo:(WalletapiQueryRecoverParam* _Nullable)in_ util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
/**
 * 给后台提交已签过名的payload包含找回参数的none交易，通过后台发送到链上
 */
- (NSString* _Nonnull)transportSubmitTxWithRecoverInfo:(WalletapiSubmitRecoverParam* _Nullable)in_ util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * 钱包找回参数
 */
@interface WalletapiWalletRecoverParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull ctrPubKey;
@property (nonatomic) NSString* _Nonnull recoverPubKeys;
@property (nonatomic) NSString* _Nonnull thirdPartyPubKey;
@property (nonatomic) int64_t relativeDelayTime;
@property (nonatomic) int32_t addressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) WalletapiRecoverMemo* _Nullable memo;
@end

@interface WalletapiWalletSendTx : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull signedTx;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletSession : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull appSymbol;
@property (nonatomic) NSString* _Nonnull hardinfo;
@property (nonatomic) NSString* _Nonnull appid;
@end

/**
 * query token list
 */
@interface WalletapiWalletTokens : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * ETH,BTY
 */
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@end

@interface WalletapiWalletTrade : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull sellId;
@property (nonatomic) NSString* _Nonnull privkey;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) double tokenNum;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) double amount;
@property (nonatomic) int32_t boardlotCnt;
@property (nonatomic) WalletapiUtil* _Nullable util;
@end

@interface WalletapiWalletTx : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) WalletapiTxdata* _Nullable tx;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiUtil* _Nullable util;
@property (nonatomic) NSString* _Nonnull key;
@property (nonatomic) NSString* _Nonnull execer;
@end

/**
 * ETH
 */
@interface WalletapiWalletTxPending : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) WalletapiTxDetail* _Nullable txinfo;
@end

/**
 * 提币手续费
 */
@interface WalletapiWithdrawFee : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull toFeeAddr;
@property (nonatomic) double fee;
@end

@interface WalletapiWithdrawFromExchangeParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull chain;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) NSString* _Nonnull value;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) NSString* _Nonnull signedTxs;
@property (nonatomic) long withdrawType;
@end

@interface WalletapiWithdrawParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull signedTxs;
@property (nonatomic) WalletapiCommonParam* _Nullable commonParam;
@property (nonatomic) WalletapiCoinTokenInfo* _Nullable coinTokenInfo;
@end

@interface WalletapiXgo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)createEvmToExchangeTx:(WalletapiEvmLockToExchangeReq* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)createExchangeToEvmTx:(WalletapiExchangeWithdrawToEvmReq* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
/**
 * 只支持BTY 从交易所到evmxgo 再回到主链paracross
 */
- (NSString* _Nonnull)createExchangeToParacrossTx:(WalletapiExchangeWithdrawToEvmReq* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)transportSendExchangeToEvmTx:(NSString* _Nullable)coinType tokenSymbol:(NSString* _Nullable)tokenSymbol p2:(WalletapiWithdrawParam* _Nullable)p2 server:(NSString* _Nullable)server error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)transportSendQueryBalance:(NSString* _Nullable)coinType tokenSymbol:(NSString* _Nullable)tokenSymbol param:(WalletapiQueryBalanceReq* _Nullable)param server:(NSString* _Nullable)server error:(NSError* _Nullable* _Nullable)error;
- (NSData* _Nullable)transportSendSignedTx:(NSString* _Nullable)coinType tokenSymbol:(NSString* _Nullable)tokenSymbol signedTx:(NSString* _Nullable)signedTx server:(NSString* _Nullable)server error:(NSError* _Nullable* _Nullable)error;
/**
 * 从联盟链evmxgo回到BTY主链paracross
 */
- (NSString* _Nonnull)xgoBurnMap:(WalletapiXgoBurnMapParam* _Nullable)p0;
- (NSString* _Nonnull)xgoTransferToExec:(WalletapiXgoTransferToExecParam* _Nullable)in_;
- (NSString* _Nonnull)xgoWithdrawFromExchange:(WalletapiExchangeWithdrawToEvmReq* _Nullable)in_;
@end

@interface WalletapiXgoBurnMapParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull symbol;
@property (nonatomic) int64_t decimal;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) WalletapiCommonParam* _Nullable commonParam;
@property (nonatomic) NSString* _Nonnull recipient;
@end

@interface WalletapiXgoBurnParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull symbol;
@property (nonatomic) int64_t decimal;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) WalletapiCommonParam* _Nullable commonParam;
@end

@interface WalletapiXgoTransferToExecParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) double amount;
@property (nonatomic) int64_t decimal;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull note;
@property (nonatomic) NSString* _Nonnull coinToken;
@property (nonatomic) NSString* _Nonnull toExecer;
@property (nonatomic) double fee;
@property (nonatomic) WalletapiCommonParam* _Nullable commonParam;
@end

/**
 * 从FromAddr转账到ToAddr 并转入ToAddr 的paracross合约请求参数
 */
@interface WalletapiYccParacrossTransferTxParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) int32_t execAddressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull note;
@end

/**
 * 从FromAddr的paracross withdraw到coins 并转账给ToAddr
 */
@interface WalletapiYccParacrossWithdrawTxParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull fromAddr;
@property (nonatomic) NSString* _Nonnull toAddr;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) int32_t execAddressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull note;
@end

@interface WalletapiZKSync : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull privKey;
@property (nonatomic) int32_t privKeyAddressID;
@property (nonatomic) NSString* _Nonnull feePrivKey;
@property (nonatomic) int32_t feePrivKeyAddressID;
@property (nonatomic) int32_t chainID;
@property (nonatomic) NSString* _Nonnull zKsyncExecer;
@property (nonatomic) int32_t execerAddressID;
@property (nonatomic) NSString* _Nonnull noneExecer;
@property (nonatomic) NSString* _Nonnull zKsyncNonce;
/**
 * 构造从chain33合约到L2交易v
 */
- (NSString* _Nonnull)createContractToTreeTx:(WalletapiZksyncContractToTree* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * 透过后台构造存款交易,通过参数判断是存ETH还是ERC20
 */
- (NSString* _Nonnull)createDepositTx:(WalletapiZksyncDepositParam* _Nullable)p0 util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
/**
 * 从二层链进行提币前需要先设置L2公钥
构造设置公钥交易 ？ 构造的这个设置公钥的交易是发送到哪里的，是L2节点吗
 */
- (NSString* _Nonnull)createSetPubKeyTx:(WalletapiZksyncSetPubKeyParam* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * L2构造给其他账户转账交易
 */
- (NSString* _Nonnull)createTransferToAccountTx:(WalletapiZksyncTransfer* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * 构造从L2转账到chain33合约交易
 */
- (NSString* _Nonnull)createTreeToContractTx:(WalletapiZksyncTreeToContract* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
/**
 * 构造交易组trans 如果是多笔交易用逗号,分隔
构造交易组时需要根据私钥获取seed, 然后对交易的payload签名
 */
- (NSString* _Nonnull)createTxGroup:(NSString* _Nullable)trans fee:(double)fee error:(NSError* _Nullable* _Nullable)error;
/**
 * 构造从L2层链提款交易
 */
- (NSString* _Nonnull)createWithdrawTx:(WalletapiZksyncWithdraw* _Nullable)param error:(NSError* _Nullable* _Nullable)error;
/**
 * 根据私钥生成二层链地址和公钥
 */
- (WalletapiZksyncL2AddrInfo* _Nullable)l2Addr:(NSError* _Nullable* _Nullable)error;
/**
 * 根据以太坊地址或者二层链地址查询账户信息
 */
- (WalletapiZKsyncAccountInfo* _Nullable)queryL2AccountInfo:(WalletapiZksyncQueryL2AccountParam* _Nullable)param util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
/**
 * 根据accountid 和tokenid查询二层链token余额
 */
- (WalletapiZksyncTokenBalancce* _Nullable)queryL2TokenBalance:(WalletapiZksyncQueryL2TokeBalanceParam* _Nullable)param util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
/**
 * 根据symbol 查询token id, 或者根据id 查询token symbol
 */
- (WalletapiZksyncTokenInfo* _Nullable)queryL2TokenInfo:(WalletapiZksyncQueryL2TokenParam* _Nullable)param util:(WalletapiUtil* _Nullable)util error:(NSError* _Nullable* _Nullable)error;
/**
 * 通过tokensymbol 查询token在zksync governance合约里的tokenid
 */
- (BOOL)queryTokenID:(WalletapiZksyncQueryTokenIDParam* _Nullable)param util:(WalletapiUtil* _Nullable)util tokenID:(int64_t* _Nullable)tokenID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signTransaction:(NSString* _Nullable)privKey hexRawTx:(NSString* _Nullable)hexRawTx addressID:(int32_t)addressID error:(NSError* _Nullable* _Nullable)error;
/**
 * SignTxGroup 对交易组的交易进行签名
第0笔是none交易，用代扣手续费的私钥进行签名,其他交易用用户的私钥进行签名
 */
- (NSString* _Nonnull)signTxGroup:(NSString* _Nullable)txgroups error:(NSError* _Nullable* _Nullable)error;
@end

@interface WalletapiZKsyncAccountInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t accountID;
@property (nonatomic) NSString* _Nonnull ethAddress;
@property (nonatomic) NSString* _Nonnull chain33Address;
@property (nonatomic) NSString* _Nonnull pubKeyX;
@property (nonatomic) NSString* _Nonnull pubKeyY;
@end

/**
 * 从chain33合约到L2
 */
@interface WalletapiZksyncContractToTree : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull fromExec;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) double amount;
@property (nonatomic) NSString* _Nonnull toL2Address;
@property (nonatomic) NSString* _Nonnull toEthAddress;
@property (nonatomic) int64_t toAccountID;
@property (nonatomic) double fee;
@end

@interface WalletapiZksyncDepositParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull zksyncContractAddr;
@property (nonatomic) NSString* _Nonnull l2Addr;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@end

@interface WalletapiZksyncL2AddrInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull l2Address;
@property (nonatomic) NSString* _Nonnull pubKeyX;
@property (nonatomic) NSString* _Nonnull pubKeyY;
@end

/**
 * 根据以太坊地址或者二层链地址查询账户信息（
 */
@interface WalletapiZksyncQueryL2AccountParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) NSString* _Nonnull l2Address;
@property (nonatomic) NSString* _Nonnull ethAddress;
@end

/**
 * 根据查询token余额
 */
@interface WalletapiZksyncQueryL2TokeBalanceParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) int64_t accountID;
@property (nonatomic) int64_t tokenID;
@end

/**
 * 根据symbol 查询token id, 或者根据id 查询token symbol
 */
@interface WalletapiZksyncQueryL2TokenParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) int64_t id_;
@property (nonatomic) NSString* _Nonnull symbol;
@end

@interface WalletapiZksyncQueryTokenIDParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cointype;
@property (nonatomic) NSString* _Nonnull tokensymbol;
@property (nonatomic) NSString* _Nonnull zksyncGovernanceContractAddr;
@end

@interface WalletapiZksyncSetPubKeyParam : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t accountId;
@property (nonatomic) int64_t pubKeyType;
@property (nonatomic) NSString* _Nonnull pubKeyX;
@property (nonatomic) NSString* _Nonnull pubKeyY;
@property (nonatomic) double fee;
@end

@interface WalletapiZksyncTokenBalancce : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t tokenID;
@property (nonatomic) NSString* _Nonnull balance;
@end

@interface WalletapiZksyncTokenInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t tokenId;
@property (nonatomic) NSString* _Nonnull tokenSymbol;
@property (nonatomic) int64_t tokenDecimal;
@end

@interface WalletapiZksyncTransfer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t fromAccountID;
@property (nonatomic) int64_t tokenID;
@property (nonatomic) double amount;
@property (nonatomic) int64_t decilmal;
@property (nonatomic) int64_t toAccountID;
@property (nonatomic) double fee;
@end

/**
 * 从L2转到chain33合约
 */
@interface WalletapiZksyncTreeToContract : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t accountID;
@property (nonatomic) int64_t tokenID;
@property (nonatomic) double amount;
@property (nonatomic) int64_t decilmal;
@property (nonatomic) NSString* _Nonnull toExec;
@property (nonatomic) double fee;
@end

@interface WalletapiZksyncWithdraw : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t tokenID;
@property (nonatomic) int64_t accountID;
@property (nonatomic) int64_t decilmal;
@property (nonatomic) double amount;
@property (nonatomic) double fee;
@property (nonatomic) double withdrawFee;
@end

/**
 * BridgeBankABI is the input ABI used to generate the binding from.
 */
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiBridgeBankABI;
/**
 * BridgeTokenABI is the input ABI used to generate the binding from.
 */
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiBridgeTokenABI;
/**
 * EvmXgoBridgeBankABI  is the input ABI used to generate the binding from.
 */
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiEvmXgoBridgeBankABI;
FOUNDATION_EXPORT const int64_t WalletapiSECP256K1;
// skipped const TypeAS with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeASString;
// skipped const TypeAtom with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeAtomString;
// skipped const TypeBch with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeBchString;
// skipped const TypeBitcoin with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeBitcoinString;
// skipped const TypeBnb with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeBnbString;
// skipped const TypeBsv with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeBsvString;
// skipped const TypeBty with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeBtyString;
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeDcrString;
// skipped const TypeDecred with unsupported type: uint32

// skipped const TypeDoge with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeDogeString;
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeETHString;
// skipped const TypeETHW with unsupported type: uint32

// skipped const TypeEther with unsupported type: uint32

// skipped const TypeEtherClassic with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeEtherClassicString;
// skipped const TypeHT with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeHtString;
// skipped const TypeLitecoin with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeLitecoinString;
// skipped const TypeNeo with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeNeoString;
// skipped const TypeTrx with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeTrxString;
// skipped const TypeYcc with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeYccString;
/**
 * 联盟链YX
 */
FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeYxString;
// skipped const TypeZcash with unsupported type: uint32

FOUNDATION_EXPORT NSString* _Nonnull const WalletapiTypeZcashString;
FOUNDATION_EXPORT const int64_t WalletapiWithdrawTypeByProxy;
FOUNDATION_EXPORT const int64_t WalletapiWithdrawTypeDirect;

@interface Walletapi : NSObject
// skipped variable CoinName with unsupported type: map[uint32]string

// skipped variable TypeTransfer with unsupported type: map[string]uint32

@end

/**
 * B58ToRipHash160  address to rip hash bytes
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiB58ToRipHash160(NSString* _Nullable addr, NSError* _Nullable* _Nullable error);

/**
 * BTY地址转换成ETH格式地址
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiBtyAddrToEthAddr(NSString* _Nullable btyAddr, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiBtyTokenWithDrawTx(double amount, NSString* _Nullable tokensymbol, NSString* _Nullable note, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiByteTohex(NSData* _Nullable param);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiByteTostring(NSData* _Nullable param);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiBytes2Hex(NSData* _Nullable d);

FOUNDATION_EXPORT NSData* _Nullable WalletapiCacheSendParacrossTx(WalletapiSendParacrossTxsReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiCallContractDecode(WalletapiEparam* _Nullable ethTx, NSError* _Nullable* _Nullable error);

/**
 * cancel ETH or ERC20 pending transaction
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiCancelPendingTx(WalletapiWalletTxPending* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * Chain33Lock 将chain33资产转移到以太坊网络
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiChain33Lock(WalletapiLockParam* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * Chain33Unlock  将以太坊网络中的chain33资产转移回chain33
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiChain33Unlock(WalletapiWalletTx* _Nullable tx, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiChatSign(NSData* _Nullable msg, NSData* _Nullable privateKey, NSError* _Nullable* _Nullable error);

/**
 * CheckPasswd 校验密码 true:密码正确，false 密码错误
 */
FOUNDATION_EXPORT BOOL WalletapiCheckPasswd(NSString* _Nullable encpasswd, NSString* _Nullable passwdhash);

FOUNDATION_EXPORT BOOL WalletapiCheckWifCompress(NSString* _Nullable key);

/**
 * 检查地址是否导入
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiCheckoutAddress(WalletapiWalletCheckAddr* _Nullable checkaddr, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT WalletapiGsendTxResp* _Nullable WalletapiCoinsTxGroup(WalletapiGsendTx* _Nullable gtx, NSError* _Nullable* _Nullable error);

/**
 * 自组建组交易，构造数据从chain33.CreateRawTx获取
 */
FOUNDATION_EXPORT WalletapiGsendTxResp* _Nullable WalletapiCoinsWithoutTxGroup(WalletapiGWithoutTx* _Nullable gtx, NSError* _Nullable* _Nullable error);

// skipped function CommonGroupTx with unsupported parameter or return types


// skipped function CompressPubkey with unsupported parameter or return types


/**
 * 构造从Exchange到evmxgo再回到BTY主链paracross交易组
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiCreateExchangeToEvmXgoParacrossTxs(WalletapiExchangeWithdrawToXgo* _Nullable in_, NSError* _Nullable* _Nullable error);

/**
 * step1: 构造从主链的paracross合约把平行链的token YBF 从paracross跨链到平行链paracross，
step2: 从平行链paracross合约提回到token合约
step3: 从比特币格式地址转到以太坊格式的地址
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiCreateMainBtcFormatToEthFormatParacrossTxGroup(WalletapiParaParacrossTransferTxParam* _Nullable p0, NSError* _Nullable* _Nullable error);

/**
 * 构造从平行链以太坊格式地址转入到比特币格式地址后再转入到paracross然后从平行链paracross跨链到主链paracross的交易组
tx1:  以太坊格式地址->比特币格式地址; tx2: 从比特币地址转到paracross  tx3: 从paracross跨链到BTY主网
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiCreateParaEthFormatToBtcFormatParacrossTxGroup(WalletapiParaParacrossTransferTxParam* _Nullable p0, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiCreateRawTransaction(WalletapiWalletTx* _Nullable tx, NSError* _Nullable* _Nullable error);

/**
 * 创建Trade交易
 */
FOUNDATION_EXPORT WalletapiGsendTxResp* _Nullable WalletapiCreateTradeTxGroup(WalletapiWalletTrade* _Nullable trade, NSError* _Nullable* _Nullable error);

/**
 * tx1: paracross->coins; tx2: 比特币格式地址转账到以太坊地址
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiCreateWithdrawTransferTxs(WalletapiYccParacrossWithdrawTxParam* _Nullable p0, NSError* _Nullable* _Nullable error);

/**
 * 构造从YCC以太坊格式地址转入到比特币格式地址后再从coins转入到paracross交易组
tx1: YCC 以太坊格式地址->比特币格式地址; tx2: 从coins到paracross
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiCreateYCCEthFormatToBtcFormatParacrossTxGroup(WalletapiYccParacrossTransferTxParam* _Nullable p0, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiDecKey(NSData* _Nullable encpwd, NSData* _Nullable privkey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiDecodeCreaTx(NSString* _Nullable cointype, NSString* _Nullable singnedTx, NSString* _Nullable node, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiDecrypt(NSString* _Nullable privkey, NSString* _Nullable in_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiDecryptSymmetric(NSString* _Nullable key, NSData* _Nullable cyphertext, NSError* _Nullable* _Nullable error);

/**
 * DecryptWithDHKeyPair
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiDecryptWithDHKeyPair(NSString* _Nullable privateKey, NSString* _Nullable publicKey, NSData* _Nullable cyphertext, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL WalletapiDeleteMulAddress(WalletapiWalletMulAddr* _Nullable muladdr);

FOUNDATION_EXPORT NSData* _Nullable WalletapiEncKey(NSData* _Nullable encpwd, NSData* _Nullable privkey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiEncPasswd(NSString* _Nullable orginpwd);

/**
 * Enc
加密数据 in
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiEncrypt(NSString* _Nullable pubkey, NSString* _Nullable in_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiEncryptSymmetric(NSString* _Nullable key, NSData* _Nullable plaintext, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiEncryptWithDHKeyPair(NSString* _Nullable privateKey, NSString* _Nullable publicKey, NSData* _Nullable plaintext, NSError* _Nullable* _Nullable error);

/**
 * ETH地址格式转换为BTY地址格式
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiEthAddrToBtyAddr(NSString* _Nullable ethAddr, NSError* _Nullable* _Nullable error);

/**
 * EthLock 将以太坊网络资产转移到chain33
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiEthLock(WalletapiWalletTx* _Nullable tx, NSError* _Nullable* _Nullable error);

/**
 * EthUnlock  chain33将以太坊资产转移回以太坊网络
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiEthUnlock(WalletapiBurnParam* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * EthUnlockByProxy 通过代理提币的方式从chain33将以太坊资产转移回以太坊网络
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiEthUnlockByProxy(WalletapiBurnParam* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * EvmTransferTx Evm转账接口 coins -> evm
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiEvmTransferTx(WalletapiEvmContractTransferReq* _Nullable in_, NSError* _Nullable* _Nullable error);

/**
 * EvmWithdrawTx Evm转账接口 evm -> coins
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiEvmWithdrawTx(WalletapiEvmContractTransferReq* _Nullable in_, NSError* _Nullable* _Nullable error);

// skipped function FromECDSA with unsupported parameter or return types


/**
 * GenerateDHSessionKey : 根据本端私钥和对端公钥生成ECDH会话密钥
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiGenerateDHSessionKey(NSString* _Nullable privateKey, NSString* _Nullable publicKey, NSError* _Nullable* _Nullable error);

// skipped function GenerateKey with unsupported parameter or return types


/**
 * GenerateSymKey: generates a random symmetric key
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiGenerateSymKey(NSError* _Nullable* _Nullable error);

/**
 * GetEvmBalance GetEvmBalance 查询联盟链合约地址下的余额
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiGetEvmBalance(WalletapiGetEvmBalanceReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * 获取地址对应的公钥pubkey,返回地址对应的pubkey
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiGetPubFromAddr(NSString* _Nullable addr, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiGetSessionId(WalletapiWalletSession* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiGetbalance(WalletapiWalletBalance* _Nullable balance, NSError* _Nullable* _Nullable error);

/**
 * HexKeyToWIF WIF Base58
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiHexKeyToWIF(NSString* _Nullable key, BOOL compress, NSError* _Nullable* _Nullable error);

// skipped function HexToECDSA with unsupported parameter or return types


FOUNDATION_EXPORT NSData* _Nullable WalletapiHexTobyte(NSString* _Nullable param);

FOUNDATION_EXPORT BOOL WalletapiImortMulAddress(WalletapiWalletMulAddr* _Nullable muladdr);

/**
 * Importaddress 导入地址到服务器
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiImportaddress(WalletapiWalletImporAddr* _Nullable importAddr, NSError* _Nullable* _Nullable error);

/**
 * metamask 以太坊系列链十六进制rlp编码交易签名方法
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiMetaMaskSign(NSString* _Nullable hexUnsignedTx, NSString* _Nullable privkey, int64_t chainID, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT WalletapiChainClient* _Nullable WalletapiNewChainClient(WalletapiConfig* _Nullable c, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiNewLocalEthTx(NSData* _Nullable in_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiNewLocalEthTx_v2(WalletapiEparam* _Nullable param, NSError* _Nullable* _Nullable error);

/**
 * NewMnemonicString create memo lang=0 english memo，lang=1 chinese memo bitsize=[128,256] and bitsize%32=0
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiNewMnemonicString(long lang, long bitsize, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT WalletapiWalletRecover* _Nullable WalletapiNewRecover(WalletapiWalletRecoverParam* _Nullable p0, NSError* _Nullable* _Nullable error);

// skipped function NewWalletFromMnemonic with unsupported parameter or return types


/**
 * NewWalletFromMnemonic_v2  通过助记词生成钱包对象
 */
FOUNDATION_EXPORT WalletapiHDWallet* _Nullable WalletapiNewWalletFromMnemonic_v2(NSString* _Nullable coinType, NSString* _Nullable mnemonic, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT WalletapiHDWallet* _Nullable WalletapiNewWalletFromMnemonic_v3(NSString* _Nullable coinType, NSString* _Nullable mnemonic, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

/**
 * paracross -> user.p.xxx.paracross
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossAssetTransfer(WalletapiParaCrossReq* _Nullable in_, NSError* _Nullable* _Nullable error);

/**
 * paracross -> coins
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossCoinsWithdraw(WalletapiContractTransferReq* _Nullable req, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossCrossAssetTransfer(WalletapiParaCrossCrossTransferReq* _Nullable in_, NSError* _Nullable* _Nullable error);

/**
 * coins -> paracross
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossDeposit(WalletapiParaCrossReq* _Nullable in_, NSError* _Nullable* _Nullable error);

/**
 * 主链 coins -> 平行链user.p.xxx.evm
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossMain2ParaEvm(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * 主链 coins -> 平行链user.p.xxx.exec
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossMain2ParaExec(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * 平行链 user.p.xxx.evm -> 主链 coins
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossParaEvm2Main(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 *  平行链user.p.xxx.exec ->主链 coins
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossParaExec2Main(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * paracross -> token
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossTokenWithdraw(WalletapiContractTransferReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * user.p.xxx.paracross -> user.p.xxx.evm
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossTransfer2Exec(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

/**
 * exchange -> paracross
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiParacrossWithdrawFromExecer(WalletapiParaCrossReq* _Nullable req, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiPasswdHash(NSData* _Nullable encpasswd);

// skipped function PrivkeyToPub with unsupported parameter or return types


FOUNDATION_EXPORT NSData* _Nullable WalletapiPrivkeyToPub_v2(NSString* _Nullable coinType, NSData* _Nullable priv, NSError* _Nullable* _Nullable error);

// skipped function PubToAddress with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull WalletapiPubToAddress_v2(NSString* _Nullable coinType, NSData* _Nullable pub, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL WalletapiQueryBtyToken(WalletapiWalletBtyToken* _Nullable in_, double* _Nullable ret0_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiQueryParacrossTxStatus(WalletapiQueryParacrossTxReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * 查询SellID
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiQuerySellId(NSString* _Nullable tokenName, int32_t count, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * 根据地址 查询BTY，ETH token 下的币种和币种的余额
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiQueryTokenBalanceListByAddress(WalletapiWalletTokens* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * 根据地址 查询BTY，ETH token 下的币种列表
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiQueryTokenListByAddr(WalletapiWalletTokens* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiQueryTransactionByTxid(WalletapiWalletQueryByTxid* _Nullable querybytxid, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiQueryTransactionsByaddress(WalletapiWalletQueryByAddr* _Nullable querybyaddr, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiRipHash160ToB58(NSString* _Nullable hash, NSError* _Nullable* _Nullable error);

/**
 * SHA256Hash 对input 计算SHA256生成哈希值, 返回16进制编码的哈希值
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiSHA256Hash(NSString* _Nullable input);

/**
 * SeedDecKey 使用钱包的password对seed进行aesgcm解密,返回解密后的seed
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiSeedDecKey(NSData* _Nullable password, NSData* _Nullable seed, NSError* _Nullable* _Nullable error);

/**
 * SeedEncKey 使用钱包的password对seed进行aesgcm加密,返回加密后的seed
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiSeedEncKey(NSData* _Nullable password, NSData* _Nullable seed, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiSendRawTransaction(WalletapiWalletSendTx* _Nullable sendtx, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiSendTransport(NSString* _Nullable cointype, NSString* _Nullable tokenSymbol, NSData* _Nullable rawData, WalletapiUtil* _Nullable NodeUrl, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void WalletapiSetAppKey(NSString* _Nullable key);

/**
 * 设置app 版本信息全局变量(例如bwallet:v3.3.1),设置后会在后续的请求头appVersion中携带该版本信息
 */
FOUNDATION_EXPORT void WalletapiSetAppVersion(NSString* _Nullable version);

FOUNDATION_EXPORT void WalletapiSetSessionID(NSString* _Nullable sid);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiSignRawTransaction(WalletapiSignData* _Nullable data, NSError* _Nullable* _Nullable error);

/**
 * SignTxGroup 对交易组里的每一笔交易分别指定私钥和addressid进行签名
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiSignTxGroup(long index, NSString* _Nullable privKey, int32_t privkeyAddressID, NSString* _Nullable hexTxsGroup, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiSignTypedMessage(NSString* _Nullable message, NSString* _Nullable privkey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiSigndata(NSData* _Nullable priv, NSData* _Nullable data, NSError* _Nullable* _Nullable error);

/**
 * accelerate ETH or ERC20  pending transaction by increase fee
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiSpeedupPendingTx(WalletapiWalletTxPending* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiStringTobyte(NSString* _Nullable param, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportCacheSendParacrossTx(WalletapiSendParacrossTxsReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * 联盟链交易所 BTY paracross 转入转出
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportParacrossExchangeInLmExchange(WalletapiLmExchangeParacrossReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TransportQueryCrossTxByAddr 根据地址分页查询跨链转入转出交易所的交易信息
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryCrossTxByAddr(WalletapiQueryTxByPage* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryParacrossTxStatus(WalletapiQueryParacrossTxReq* _Nullable in_, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TransportQueryTotalWithdrawAmountByProxy 查询当天已完成的代理提币总金额
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryTotalWithdrawAmountByProxy(WalletapiQueryWithdrawByProxyParam* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 *  TransportQueryTransferToExchangeStatus查询跨链转入交易所状态
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryTransferToExchangeStatus(WalletapiQueryCrossStatusParam* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryTxStatus(NSString* _Nullable coinType, NSString* _Nullable tokenSymbol, WalletapiQueryTxStatusReq* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TransportQueryWithdrawFromExchangeStatus查询从交易所跨链提取token状态
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportQueryWithdrawFromExchangeStatus(WalletapiQueryCrossStatusParam* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TransportTransferToExchange跨链转入交易所
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportTransferToExchange(WalletapiTransferToExchangeParam* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TransportWithdrawFromExchange从交易所跨链提取token
 */
FOUNDATION_EXPORT NSData* _Nullable WalletapiTransportWithdrawFromExchange(WalletapiWithdrawFromExchangeParam* _Nullable param, WalletapiUtil* _Nullable util, NSError* _Nullable* _Nullable error);

/**
 * TrimZeroAndDot ...
 */
FOUNDATION_EXPORT NSString* _Nonnull WalletapiTrimZeroAndDot(NSString* _Nullable s);

FOUNDATION_EXPORT NSString* _Nonnull WalletapiWifKeyToHex(NSString* _Nullable key);

#endif
